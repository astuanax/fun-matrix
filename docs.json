[
    {
        "comment": "/**\n * @class Matrix\n * @classdesc Matrix applicative providing standard matrix operations\n * @summary The Matrix class should not be instantiated with the new keyword. Instead use the Matrix.of syntax to create a new Matrix. Unfortunatly jsdocs does not allow for the constructor to be hidden.\n * @hidecontructor\n * @see of\n * @example\n *\n * const m =  Matrix.of([[1,2],[2,3],[4,5]])\n *\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "kind": "class",
        "name": "Matrix",
        "classdesc": "Matrix applicative providing standard matrix operations",
        "summary": "The Matrix class should not be instantiated with the new keyword. Instead use the Matrix.of syntax to create a new Matrix. Unfortunatly jsdocs does not allow for the constructor to be hidden.",
        "tags": [
            {
                "originalTitle": "hidecontructor",
                "title": "hidecontructor",
                "text": ""
            }
        ],
        "see": [
            "of"
        ],
        "examples": [
            "const m =  Matrix.of([[1,2],[2,3],[4,5]])"
        ],
        "longname": "Matrix",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                708,
                777
            ],
            "filename": "matrix.js",
            "lineno": 22,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000039",
                "name": "Matrix",
                "type": "FunctionExpression"
            },
            "vars": {
                "this.__value": null,
                "this.precision": null
            }
        },
        "undocumented": true,
        "name": "Matrix",
        "longname": "Matrix",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                736,
                754
            ],
            "filename": "matrix.js",
            "lineno": 23,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000045",
                "name": "this.__value",
                "type": "Identifier",
                "value": "val",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value",
        "longname": "__value",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                757,
                775
            ],
            "filename": "matrix.js",
            "lineno": 24,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000051",
                "name": "this.precision",
                "type": "Literal",
                "value": 4,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "precision",
        "longname": "precision",
        "kind": "member",
        "scope": "global"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @property {string} type\n * @type {string}\n * @example\n  *\n  * const m =  Matrix.of([[1,2],[2,3],[4,5]])\n  * m.type === 'Matrix'\n */",
        "meta": {
            "range": [
                938,
                970
            ],
            "filename": "matrix.js",
            "lineno": 36,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000057",
                "name": "Matrix.prototype.type",
                "type": "Literal",
                "value": "Matrix",
                "paramnames": []
            }
        },
        "memberof": "Matrix",
        "properties": [
            {
                "type": {
                    "names": [
                        "string"
                    ]
                },
                "name": "type"
            }
        ],
        "type": {
            "names": [
                "string"
            ]
        },
        "examples": [
            "const m =  Matrix.of([[1,2],[2,3],[4,5]])\nm.type === 'Matrix'"
        ],
        "name": "type",
        "longname": "Matrix#type",
        "kind": "member",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @member setPrecision\n * @param precision {number} Set the number of decimals for rounding\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 38,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "member",
        "name": "setPrecision",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "description": "Set the number of decimals for rounding",
                "name": "precision"
            }
        ],
        "scope": "static",
        "longname": "Matrix.setPrecision"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1093,
                1178
            ],
            "filename": "matrix.js",
            "lineno": 43,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000065",
                "name": "Matrix.prototype.setPrecision",
                "type": "FunctionExpression",
                "paramnames": [
                    "precision"
                ]
            },
            "vars": {
                "this.precision": "Matrix#setPrecision#precision"
            }
        },
        "undocumented": true,
        "name": "setPrecision",
        "longname": "Matrix#setPrecision",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1150,
                1176
            ],
            "filename": "matrix.js",
            "lineno": 44,
            "columnno": 2,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000075",
                "name": "this.precision",
                "type": "Identifier",
                "value": "precision",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "precision",
        "longname": "Matrix#setPrecision#precision",
        "kind": "member",
        "memberof": "Matrix#setPrecision",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @member isSymmetric\n * @returns {boolean}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 47,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "member",
        "name": "isSymmetric",
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "scope": "static",
        "longname": "Matrix.isSymmetric"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1253,
                1389
            ],
            "filename": "matrix.js",
            "lineno": 52,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000081",
                "name": "Matrix.prototype.isSymmetric",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "a": "Matrix#isSymmetric~a",
                "b": "Matrix#isSymmetric~b"
            }
        },
        "undocumented": true,
        "name": "isSymmetric",
        "longname": "Matrix#isSymmetric",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1306,
                1322
            ],
            "filename": "matrix.js",
            "lineno": 53,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000090",
                "name": "a",
                "type": "MemberExpression",
                "value": "this.__value"
            }
        },
        "undocumented": true,
        "name": "a",
        "longname": "Matrix#isSymmetric~a",
        "kind": "constant",
        "memberof": "Matrix#isSymmetric",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1331,
                1365
            ],
            "filename": "matrix.js",
            "lineno": 54,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000096",
                "name": "b",
                "type": "MemberExpression",
                "value": ".__value"
            }
        },
        "undocumented": true,
        "name": "b",
        "longname": "Matrix#isSymmetric~b",
        "kind": "constant",
        "memberof": "Matrix#isSymmetric",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @member isOrthogonal\n * @param M {Matrix|array}\n * @returns {boolean}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 58,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "member",
        "name": "isOrthogonal",
        "params": [
            {
                "type": {
                    "names": [
                        "Matrix",
                        "array"
                    ]
                },
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "boolean"
                    ]
                }
            }
        ],
        "scope": "static",
        "longname": "Matrix.isOrthogonal"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1492,
                1634
            ],
            "filename": "matrix.js",
            "lineno": 64,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000111",
                "name": "Matrix.prototype.isOrthogonal",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "AxAt": "Matrix#isOrthogonal~AxAt",
                "I": "Matrix#isOrthogonal~I"
            }
        },
        "undocumented": true,
        "name": "isOrthogonal",
        "longname": "Matrix#isOrthogonal",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1546,
                1579
            ],
            "filename": "matrix.js",
            "lineno": 65,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000120",
                "name": "AxAt",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "AxAt",
        "longname": "Matrix#isOrthogonal~AxAt",
        "kind": "constant",
        "memberof": "Matrix#isOrthogonal",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1588,
                1607
            ],
            "filename": "matrix.js",
            "lineno": 66,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000131",
                "name": "I",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "I",
        "longname": "Matrix#isOrthogonal~I",
        "kind": "constant",
        "memberof": "Matrix#isOrthogonal",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @member getCols\n * @returns {*}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 70,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "member",
        "name": "getCols",
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "scope": "static",
        "longname": "Matrix.getCols"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1699,
                1773
            ],
            "filename": "matrix.js",
            "lineno": 75,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000143",
                "name": "Matrix.prototype.getCols",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "getCols",
        "longname": "Matrix#getCols",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @member equals\n * @parma M {Matrix|array}\n * @returns {Boolean}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 79,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "member",
        "name": "equals",
        "tags": [
            {
                "originalTitle": "parma",
                "title": "parma",
                "text": "M {Matrix|array}",
                "value": "M {Matrix|array}"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Boolean"
                    ]
                }
            }
        ],
        "scope": "static",
        "longname": "Matrix.equals"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                1870,
                1958
            ],
            "filename": "matrix.js",
            "lineno": 85,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000160",
                "name": "Matrix.prototype.equals",
                "type": "FunctionExpression",
                "paramnames": [
                    "M"
                ]
            }
        },
        "undocumented": true,
        "name": "equals",
        "longname": "Matrix#equals",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @member getRows\n * @returns {*}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 89,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "member",
        "name": "getRows",
        "returns": [
            {
                "type": {
                    "names": [
                        "*"
                    ]
                }
            }
        ],
        "scope": "static",
        "longname": "Matrix.getRows"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2023,
                2094
            ],
            "filename": "matrix.js",
            "lineno": 94,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000181",
                "name": "Matrix.prototype.getRows",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "getRows",
        "longname": "Matrix#getRows",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @member getShape\n * @returns {array}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 98,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "member",
        "name": "getShape",
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                }
            }
        ],
        "scope": "static",
        "longname": "Matrix.getShape"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2164,
                2249
            ],
            "filename": "matrix.js",
            "lineno": 103,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000196",
                "name": "Matrix.prototype.getShape",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "getShape",
        "longname": "Matrix#getShape",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @static\n * @function of\n * @desc Creates a Matrix object and flattens the Matrix\n * @param val {array|function}\n * @returns {Matrix}\n * @example\n  *\n  * const m =  Matrix.of([[1,2],[2,3],[4,5]])\n  *\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 107,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "static",
        "kind": "function",
        "name": "of",
        "description": "Creates a Matrix object and flattens the Matrix",
        "params": [
            {
                "type": {
                    "names": [
                        "array",
                        "function"
                    ]
                },
                "name": "val"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "examples": [
            "const m =  Matrix.of([[1,2],[2,3],[4,5]])"
        ],
        "longname": "Matrix.of"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2481,
                2651
            ],
            "filename": "matrix.js",
            "lineno": 119,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000215",
                "name": "Matrix.of",
                "type": "FunctionExpression",
                "paramnames": [
                    "val"
                ]
            },
            "vars": {
                "this.__value": "Matrix.of#__value"
            }
        },
        "undocumented": true,
        "name": "of",
        "longname": "Matrix.of",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2586,
                2604
            ],
            "filename": "matrix.js",
            "lineno": 122,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000234",
                "name": "this.__value",
                "type": "Identifier",
                "value": "val",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value",
        "longname": "Matrix.of#__value",
        "kind": "member",
        "memberof": "Matrix.of",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member map\n * @description Maps over the rows of the matrix using a map function\n * @param f {function}\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 128,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "map",
        "description": "Maps over the rows of the matrix using a map function",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "f"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#map"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                2823,
                2903
            ],
            "filename": "matrix.js",
            "lineno": 136,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000246",
                "name": "Matrix.prototype.map",
                "type": "FunctionExpression",
                "paramnames": [
                    "f"
                ]
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "Matrix#map",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @static\n * @function map\n * @description Static function that maps over the rows of the matrix using a map function\n * @param f {function}\n * @param M {Matrix}\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 140,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "static",
        "kind": "function",
        "name": "map",
        "description": "Static function that maps over the rows of the matrix using a map function",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "f"
            },
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                },
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix.map"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3117,
                3185
            ],
            "filename": "matrix.js",
            "lineno": 149,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000268",
                "name": "Matrix.map",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "map",
        "longname": "Matrix.map",
        "kind": "member",
        "memberof": "Matrix",
        "scope": "static"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member fold\n * @description Reduce the matrix rows using a reduce function\n * @param f {function}\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 153,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "fold",
        "description": "Reduce the matrix rows using a reduce function",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "f"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#fold"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3351,
                3437
            ],
            "filename": "matrix.js",
            "lineno": 161,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000289",
                "name": "Matrix.prototype.fold",
                "type": "FunctionExpression",
                "paramnames": [
                    "f"
                ]
            }
        },
        "undocumented": true,
        "name": "fold",
        "longname": "Matrix#fold",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @static\n * @function fold\n * @description Static function to reduce the matrix rows using a reduce function\n * @param f {function}\n * @param M {Matrix}\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 165,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "static",
        "kind": "function",
        "name": "fold",
        "description": "Static function to reduce the matrix rows using a reduce function",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "f"
            },
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                },
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix.fold"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3643,
                3713
            ],
            "filename": "matrix.js",
            "lineno": 174,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000312",
                "name": "Matrix.fold",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "fold",
        "longname": "Matrix.fold",
        "kind": "member",
        "memberof": "Matrix",
        "scope": "static"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member ap\n * @description Applies a Matrix to a function\n * @param M {Matrix}\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 178,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "ap",
        "description": "Applies a Matrix to a function",
        "params": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                },
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#ap"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                3859,
                3937
            ],
            "filename": "matrix.js",
            "lineno": 186,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000333",
                "name": "Matrix.prototype.ap",
                "type": "FunctionExpression",
                "paramnames": [
                    "M"
                ]
            }
        },
        "undocumented": true,
        "name": "ap",
        "longname": "Matrix#ap",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @static\n * @function ap\n * @description Applies a Matrix to a function\n * @param f {function}\n * @param M {Matrix}\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 190,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "static",
        "kind": "function",
        "name": "ap",
        "description": "Applies a Matrix to a function",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "name": "f"
            },
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                },
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix.ap"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4106,
                4172
            ],
            "filename": "matrix.js",
            "lineno": 199,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000355",
                "name": "Matrix.ap",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "ap",
        "longname": "Matrix.ap",
        "kind": "member",
        "memberof": "Matrix",
        "scope": "static"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member concat\n * @description Concatenates 2 Matrices using a function as operator\n * @param M {Matrix}\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 203,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "concat",
        "description": "Concatenates 2 Matrices using a function as operator",
        "params": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                },
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#concat"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4344,
                4433
            ],
            "filename": "matrix.js",
            "lineno": 211,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000376",
                "name": "Matrix.prototype.concat",
                "type": "FunctionExpression",
                "paramnames": [
                    "M",
                    "f"
                ]
            }
        },
        "undocumented": true,
        "name": "concat",
        "longname": "Matrix#concat",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @static\n * @function concat\n * @description Concatenates 2 Matrices using a function as operator\n * @param A {Matrix}\n * @param B {Matrix}\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 215,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "static",
        "kind": "function",
        "name": "concat",
        "description": "Concatenates 2 Matrices using a function as operator",
        "params": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                },
                "name": "A"
            },
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                },
                "name": "B"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix.concat"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4626,
                4712
            ],
            "filename": "matrix.js",
            "lineno": 224,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000401",
                "name": "Matrix.concat",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "concat",
        "longname": "Matrix.concat",
        "kind": "member",
        "memberof": "Matrix",
        "scope": "static"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member empty\n * @description Return an empty Matrix from an existing Matrix\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 228,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "empty",
        "description": "Return an empty Matrix from an existing Matrix",
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#empty"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                4856,
                4932
            ],
            "filename": "matrix.js",
            "lineno": 235,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000427",
                "name": "Matrix.prototype.empty",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "empty",
        "longname": "Matrix#empty",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @static\n * @function empty\n * @description Return an empty Matrix from an existing Matrix\n * @param rows {number}\n * @param cols {number}\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 239,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "static",
        "kind": "function",
        "name": "empty",
        "description": "Return an empty Matrix from an existing Matrix",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "name": "rows"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "name": "cols"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix.empty"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5124,
                5296
            ],
            "filename": "matrix.js",
            "lineno": 248,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000446",
                "name": "Matrix.empty",
                "type": "CallExpression",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "empty",
        "longname": "Matrix.empty",
        "kind": "member",
        "memberof": "Matrix",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5185,
                5260
            ],
            "filename": "matrix.js",
            "lineno": 249,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000461",
                "name": "m",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "<anonymous>~m",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member identity\n * @desc Returns an identity matrix\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 255,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "identity",
        "description": "Returns an identity matrix",
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#identity"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5438,
                5519
            ],
            "filename": "matrix.js",
            "lineno": 262,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000495",
                "name": "Matrix.prototype.identity",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "Matrix#identity",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @static\n * @function identity\n * @desc Returns an identity matrix\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 266,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "static",
        "kind": "function",
        "name": "identity",
        "description": "Returns an identity matrix",
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix.identity"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5639,
                5801
            ],
            "filename": "matrix.js",
            "lineno": 273,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000514",
                "name": "Matrix.identity",
                "type": "FunctionExpression",
                "paramnames": [
                    "rows",
                    "cols"
                ]
            },
            "vars": {
                "m": "Matrix.identity~m",
                "": null
            }
        },
        "undocumented": true,
        "name": "identity",
        "longname": "Matrix.identity",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5689,
                5764
            ],
            "filename": "matrix.js",
            "lineno": 274,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000523",
                "name": "m",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "m",
        "longname": "Matrix.identity~m",
        "kind": "constant",
        "memberof": "Matrix.identity",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member combine\n * @see Matrix.concat\n * @param M\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 278,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "combine",
        "see": [
            "Matrix.concat"
        ],
        "params": [
            {
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#combine"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                5918,
                6015
            ],
            "filename": "matrix.js",
            "lineno": 286,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000557",
                "name": "Matrix.prototype.combine",
                "type": "FunctionExpression",
                "paramnames": [
                    "M"
                ]
            }
        },
        "undocumented": true,
        "name": "combine",
        "longname": "Matrix#combine",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @static\n * @function combine\n * @see Matrix.concat\n * @param M\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 290,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "static",
        "kind": "function",
        "name": "combine",
        "see": [
            "Matrix.concat"
        ],
        "params": [
            {
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix.combine"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6132,
                6219
            ],
            "filename": "matrix.js",
            "lineno": 298,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000582",
                "name": "Matrix.combine",
                "type": "FunctionExpression",
                "paramnames": [
                    "A",
                    "B"
                ]
            }
        },
        "undocumented": true,
        "name": "combine",
        "longname": "Matrix.combine",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "static"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member dot\n * @description Returns the dot product between 2 matrices\n * @param M\n * @param f\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 302,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "dot",
        "description": "Returns the dot product between 2 matrices",
        "params": [
            {
                "name": "M"
            },
            {
                "name": "f"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#dot"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6381,
                6487
            ],
            "filename": "matrix.js",
            "lineno": 311,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000606",
                "name": "Matrix.prototype.dot",
                "type": "FunctionExpression",
                "paramnames": [
                    "M"
                ]
            }
        },
        "undocumented": true,
        "name": "dot",
        "longname": "Matrix#dot",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @static\n * @function dot\n * @description Returns the dot product between 2 matrices\n * @param M\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 315,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "static",
        "kind": "function",
        "name": "dot",
        "description": "Returns the dot product between 2 matrices",
        "params": [
            {
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix.dot"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6637,
                6709
            ],
            "filename": "matrix.js",
            "lineno": 323,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000635",
                "name": "Matrix.dot",
                "type": "FunctionExpression",
                "paramnames": [
                    "A",
                    "B"
                ]
            }
        },
        "undocumented": true,
        "name": "dot",
        "longname": "Matrix.dot",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "static"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member fill\n * @desc Fill up an empty matrix with the provided map function\n * @param f\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 327,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "fill",
        "description": "Fill up an empty matrix with the provided map function",
        "params": [
            {
                "name": "f"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#fill"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                6865,
                6950
            ],
            "filename": "matrix.js",
            "lineno": 335,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000658",
                "name": "Matrix.prototype.fill",
                "type": "FunctionExpression",
                "paramnames": [
                    "f"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "fill",
        "longname": "Matrix#fill",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member zeros\n * @desc Fill up an empty matrix with zeros\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 339,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "zeros",
        "description": "Fill up an empty matrix with zeros",
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#zeros"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7075,
                7153
            ],
            "filename": "matrix.js",
            "lineno": 346,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000684",
                "name": "Matrix.prototype.zeros",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "zeros",
        "longname": "Matrix#zeros",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member ones\n * @desc Fill up an empty matrix with ones\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 350,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "ones",
        "description": "Fill up an empty matrix with ones",
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#ones"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7276,
                7353
            ],
            "filename": "matrix.js",
            "lineno": 357,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000705",
                "name": "Matrix.prototype.ones",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "ones",
        "longname": "Matrix#ones",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member random\n * @desc Fill up an empty matrix with random values\n * @param {function} [f = e => Math.random() * 2 - 1]\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 361,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "random",
        "description": "Fill up an empty matrix with random values",
        "params": [
            {
                "type": {
                    "names": [
                        "function"
                    ]
                },
                "optional": true,
                "defaultvalue": "e => Math.random() * 2 - 1",
                "name": "f"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#random"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7541,
                7645
            ],
            "filename": "matrix.js",
            "lineno": 369,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000726",
                "name": "Matrix.prototype.random",
                "type": "FunctionExpression",
                "paramnames": [
                    "f"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "random",
        "longname": "Matrix#random",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member toArray\n * @desc Returns the array from the matrix\n * @returns {array}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 373,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "toArray",
        "description": "Returns the array from the matrix",
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                }
            }
        ],
        "longname": "Matrix#toArray"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7770,
                7866
            ],
            "filename": "matrix.js",
            "lineno": 380,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000757",
                "name": "Matrix.prototype.toArray",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "toArray",
        "longname": "Matrix#toArray",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member clone\n * @desc Returns a clone of the matrix\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 384,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "clone",
        "description": "Returns a clone of the matrix",
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#clone"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                7986,
                8066
            ],
            "filename": "matrix.js",
            "lineno": 391,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000782",
                "name": "Matrix.prototype.clone",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "clone",
        "longname": "Matrix#clone",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member clone\n * @desc Returns a clone Matrix from an array\n * @returns {array}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 395,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "clone",
        "description": "Returns a clone Matrix from an array",
        "returns": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                }
            }
        ],
        "longname": "Matrix#clone"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8192,
                8287
            ],
            "filename": "matrix.js",
            "lineno": 402,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000799",
                "name": "Matrix.fromArray",
                "type": "FunctionExpression",
                "paramnames": [
                    "arr"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "fromArray",
        "longname": "Matrix.fromArray",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "static"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @instance\n * @member transpose\n * @desc Returns a transposed Matrix\n * @returns {Matrix}\n * @example\n *\n * const A = Matrix.of([-1, 2], [3, 4], [-8, 2])\n * const b = A.transpose().toArray()\n * // returns [[-1, 3,-8], [2, 4, 2]]\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 406,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "scope": "instance",
        "kind": "member",
        "name": "transpose",
        "description": "Returns a transposed Matrix",
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "examples": [
            "const A = Matrix.of([-1, 2], [3, 4], [-8, 2])\nconst b = A.transpose().toArray()\n// returns [[-1, 3,-8], [2, 4, 2]]"
        ],
        "longname": "Matrix#transpose"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8548,
                8646
            ],
            "filename": "matrix.js",
            "lineno": 418,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000825",
                "name": "Matrix.prototype.transpose",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "transpose",
        "longname": "Matrix#transpose",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @function transpose\n * @desc Returns a transposed Matrix\n * @param M {Matrix|array} A Matrix or a matrix array\n * @returns {Matrix}\n * @example\n *\n * const a = [-1, 2], [3, 4], [-8, 2]\n * const b = Matrix.transpose(a).toArray()\n * // returns [[-1, 3,-8], [2, 4, 2]]\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 422,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "function",
        "name": "transpose",
        "description": "Returns a transposed Matrix",
        "params": [
            {
                "type": {
                    "names": [
                        "Matrix",
                        "array"
                    ]
                },
                "description": "A Matrix or a matrix array",
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "examples": [
            "const a = [-1, 2], [3, 4], [-8, 2]\nconst b = Matrix.transpose(a).toArray()\n// returns [[-1, 3,-8], [2, 4, 2]]"
        ],
        "scope": "static",
        "longname": "Matrix.transpose"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                8945,
                9014
            ],
            "filename": "matrix.js",
            "lineno": 434,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000846",
                "name": "Matrix.transpose",
                "type": "FunctionExpression",
                "paramnames": [
                    "M"
                ]
            }
        },
        "undocumented": true,
        "name": "transpose",
        "longname": "Matrix.transpose",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "static"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @member add\n * @instance\n * @param M {Matrix|number} Add a Matrix or a number\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 438,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "member",
        "name": "add",
        "scope": "instance",
        "params": [
            {
                "type": {
                    "names": [
                        "Matrix",
                        "number"
                    ]
                },
                "description": "Add a Matrix or a number",
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#add"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9146,
                9492
            ],
            "filename": "matrix.js",
            "lineno": 445,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000863",
                "name": "Matrix.prototype.add",
                "type": "FunctionExpression",
                "paramnames": [
                    "M"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "add",
        "longname": "Matrix#add",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @member subtract\n * @instance\n * @param M {Matrix|number} Subtract a Matrix or a number\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 456,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "member",
        "name": "subtract",
        "scope": "instance",
        "params": [
            {
                "type": {
                    "names": [
                        "Matrix",
                        "number"
                    ]
                },
                "description": "Subtract a Matrix or a number",
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#subtract"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                9634,
                9990
            ],
            "filename": "matrix.js",
            "lineno": 463,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100000940",
                "name": "Matrix.prototype.subtract",
                "type": "FunctionExpression",
                "paramnames": [
                    "M"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "subtract",
        "longname": "Matrix#subtract",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @member multiply\n * @instance\n * @desc Mutliplw a scalar or a mtraix with a matrix. Throws an error if the multiplication is not possible.\n * @param M {Matrix|number}\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 474,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "member",
        "name": "multiply",
        "scope": "instance",
        "description": "Mutliplw a scalar or a mtraix with a matrix. Throws an error if the multiplication is not possible.",
        "params": [
            {
                "type": {
                    "names": [
                        "Matrix",
                        "number"
                    ]
                },
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#multiply"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10211,
                10657
            ],
            "filename": "matrix.js",
            "lineno": 482,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001017",
                "name": "Matrix.prototype.multiply",
                "type": "FunctionExpression",
                "paramnames": [
                    "M"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "multiply",
        "longname": "Matrix#multiply",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @member additiveinverse\n * @instance\n * @desc Function that returns the matrix obtained by changing the sign of every matrix element. The additive inverse of matrix A is written –A.\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 494,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "member",
        "name": "additiveinverse",
        "scope": "instance",
        "description": "Function that returns the matrix obtained by changing the sign of every matrix element. The additive inverse of matrix A is written –A.",
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#additiveinverse"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                10893,
                10981
            ],
            "filename": "matrix.js",
            "lineno": 501,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001100",
                "name": "Matrix.prototype.additiveinverse",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "additiveinverse",
        "longname": "Matrix#additiveinverse",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @member hadamard\n * @instance\n * @see mumtiply\n * @param M\n * @returns {Matrix}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 505,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "member",
        "name": "hadamard",
        "scope": "instance",
        "see": [
            "mumtiply"
        ],
        "params": [
            {
                "name": "M"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "Matrix#hadamard"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11094,
                11175
            ],
            "filename": "matrix.js",
            "lineno": 513,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001120",
                "name": "Matrix.prototype.hadamard",
                "type": "FunctionExpression",
                "paramnames": [
                    "M"
                ]
            }
        },
        "undocumented": true,
        "name": "hadamard",
        "longname": "Matrix#hadamard",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "/**\n * @memberOf Matrix\n * @member lu\n * @desc Calculates LU decomposition of the current Matrix\n * @returns {Matrix[]}\n */",
        "meta": {
            "filename": "matrix.js",
            "lineno": 517,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {}
        },
        "memberof": "Matrix",
        "kind": "member",
        "name": "lu",
        "description": "Calculates LU decomposition of the current Matrix",
        "returns": [
            {
                "type": {
                    "names": [
                        "Array.<Matrix>"
                    ]
                }
            }
        ],
        "scope": "static",
        "longname": "Matrix.lu"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11301,
                11938
            ],
            "filename": "matrix.js",
            "lineno": 523,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001140",
                "name": "Matrix.prototype.lu",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "n": "Matrix#lu~n",
                "tol": "Matrix#lu~tol",
                "A": "Matrix#lu~A",
                "L": "Matrix#lu~L",
                "U": "Matrix#lu~U",
                "k": "Matrix#lu~k",
                "L.__value[undefined][undefined]": "Matrix#lu~L.__value[undefined][undefined]",
                "i": "Matrix#lu~i",
                "j": "Matrix#lu~j",
                "A.__value[undefined][undefined]": "Matrix#lu~A.__value[undefined][undefined]",
                "l": "Matrix#lu~l",
                "U.__value[undefined][undefined]": "Matrix#lu~U.__value[undefined][undefined]"
            }
        },
        "undocumented": true,
        "name": "lu",
        "longname": "Matrix#lu",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11345,
                11363
            ],
            "filename": "matrix.js",
            "lineno": 524,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001149",
                "name": "n",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "Matrix#lu~n",
        "kind": "constant",
        "memberof": "Matrix#lu",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11372,
                11382
            ],
            "filename": "matrix.js",
            "lineno": 525,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001156",
                "name": "tol",
                "type": "Literal",
                "value": 0.000001
            }
        },
        "undocumented": true,
        "name": "tol",
        "longname": "Matrix#lu~tol",
        "kind": "constant",
        "memberof": "Matrix#lu",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11391,
                11407
            ],
            "filename": "matrix.js",
            "lineno": 526,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001160",
                "name": "A",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "A",
        "longname": "Matrix#lu~A",
        "kind": "constant",
        "memberof": "Matrix#lu",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11416,
                11432
            ],
            "filename": "matrix.js",
            "lineno": 527,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001167",
                "name": "L",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "L",
        "longname": "Matrix#lu~L",
        "kind": "constant",
        "memberof": "Matrix#lu",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11441,
                11457
            ],
            "filename": "matrix.js",
            "lineno": 528,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001174",
                "name": "U",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "U",
        "longname": "Matrix#lu~U",
        "kind": "constant",
        "memberof": "Matrix#lu",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11470,
                11475
            ],
            "filename": "matrix.js",
            "lineno": 530,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001182",
                "name": "k",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "k",
        "longname": "Matrix#lu~k",
        "kind": "member",
        "memberof": "Matrix#lu",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11589,
                11608
            ],
            "filename": "matrix.js",
            "lineno": 532,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001210",
                "name": "L.__value[undefined][undefined]",
                "type": "Literal",
                "funcscope": "Matrix#lu",
                "value": 1,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value[undefined][undefined]",
        "longname": "Matrix#lu~L.__value[undefined][undefined]",
        "kind": "member",
        "memberof": "Matrix#lu~L",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11622,
                11631
            ],
            "filename": "matrix.js",
            "lineno": 533,
            "columnno": 13,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001221",
                "name": "i",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "Matrix#lu~i",
        "kind": "member",
        "memberof": "Matrix#lu",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11653,
                11704
            ],
            "filename": "matrix.js",
            "lineno": 534,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001233",
                "name": "L.__value[undefined][undefined]",
                "type": "BinaryExpression",
                "funcscope": "Matrix#lu",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value[undefined][undefined]",
        "longname": "Matrix#lu~L.__value[undefined][undefined]",
        "kind": "member",
        "memberof": "Matrix#lu~L",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11720,
                11729
            ],
            "filename": "matrix.js",
            "lineno": 535,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001258",
                "name": "j",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "j",
        "longname": "Matrix#lu~j",
        "kind": "member",
        "memberof": "Matrix#lu",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11753,
                11822
            ],
            "filename": "matrix.js",
            "lineno": 536,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001270",
                "name": "A.__value[undefined][undefined]",
                "type": "BinaryExpression",
                "funcscope": "Matrix#lu",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value[undefined][undefined]",
        "longname": "Matrix#lu~A.__value[undefined][undefined]",
        "kind": "member",
        "memberof": "Matrix#lu~A",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11850,
                11855
            ],
            "filename": "matrix.js",
            "lineno": 539,
            "columnno": 13,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001303",
                "name": "l",
                "type": "Identifier",
                "value": "k"
            }
        },
        "undocumented": true,
        "name": "l",
        "longname": "Matrix#lu~l",
        "kind": "member",
        "memberof": "Matrix#lu",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11877,
                11910
            ],
            "filename": "matrix.js",
            "lineno": 540,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001313",
                "name": "U.__value[undefined][undefined]",
                "type": "MemberExpression",
                "funcscope": "Matrix#lu",
                "value": "A.__value[undefined][undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value[undefined][undefined]",
        "longname": "Matrix#lu~U.__value[undefined][undefined]",
        "kind": "member",
        "memberof": "Matrix#lu~U",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11940,
                12926
            ],
            "filename": "matrix.js",
            "lineno": 546,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001333",
                "name": "Matrix.prototype.rref",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "lead": "Matrix#rref~lead",
                "resultMatrix": "Matrix#rref~resultMatrix",
                "r": "Matrix#rref~r",
                "i": "Matrix#rref~i",
                "tmp": "Matrix#rref~tmp",
                "resultMatrix.__value[undefined]": "Matrix#rref~resultMatrix.__value[undefined]",
                "val": "Matrix#rref~val",
                "j": "Matrix#rref~j",
                "resultMatrix.__value[undefined][undefined]": "Matrix#rref~resultMatrix.__value[undefined][undefined]"
            }
        },
        "undocumented": true,
        "name": "rref",
        "longname": "Matrix#rref",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                11984,
                11992
            ],
            "filename": "matrix.js",
            "lineno": 547,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001342",
                "name": "lead",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "lead",
        "longname": "Matrix#rref~lead",
        "kind": "member",
        "memberof": "Matrix#rref",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12001,
                12028
            ],
            "filename": "matrix.js",
            "lineno": 548,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001346",
                "name": "resultMatrix",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "resultMatrix",
        "longname": "Matrix#rref~resultMatrix",
        "kind": "constant",
        "memberof": "Matrix#rref",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12041,
                12046
            ],
            "filename": "matrix.js",
            "lineno": 550,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001354",
                "name": "r",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "r",
        "longname": "Matrix#rref~r",
        "kind": "member",
        "memberof": "Matrix#rref",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12149,
                12154
            ],
            "filename": "matrix.js",
            "lineno": 554,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001377",
                "name": "i",
                "type": "Identifier",
                "value": "r"
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "Matrix#rref~i",
        "kind": "member",
        "memberof": "Matrix#rref",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12257,
                12262
            ],
            "filename": "matrix.js",
            "lineno": 558,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001403",
                "name": "i",
                "type": "Identifier",
                "funcscope": "Matrix#rref",
                "value": "r",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "Matrix#rref~i",
        "kind": "member",
        "memberof": "Matrix#rref",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12380,
                12409
            ],
            "filename": "matrix.js",
            "lineno": 566,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001420",
                "name": "tmp",
                "type": "MemberExpression",
                "value": "resultMatrix.__value[undefined]"
            }
        },
        "undocumented": true,
        "name": "tmp",
        "longname": "Matrix#rref~tmp",
        "kind": "member",
        "memberof": "Matrix#rref",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12414,
                12463
            ],
            "filename": "matrix.js",
            "lineno": 567,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001428",
                "name": "resultMatrix.__value[undefined]",
                "type": "MemberExpression",
                "funcscope": "Matrix#rref",
                "value": "resultMatrix.__value[undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value[undefined]",
        "longname": "Matrix#rref~resultMatrix.__value[undefined]",
        "kind": "member",
        "memberof": "Matrix#rref~resultMatrix",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12468,
                12497
            ],
            "filename": "matrix.js",
            "lineno": 568,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001440",
                "name": "resultMatrix.__value[undefined]",
                "type": "Identifier",
                "funcscope": "Matrix#rref",
                "value": "tmp",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value[undefined]",
        "longname": "Matrix#rref~resultMatrix.__value[undefined]",
        "kind": "member",
        "memberof": "Matrix#rref~resultMatrix",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12507,
                12542
            ],
            "filename": "matrix.js",
            "lineno": 570,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001448",
                "name": "val",
                "type": "MemberExpression",
                "value": "resultMatrix.__value[undefined][undefined]"
            }
        },
        "undocumented": true,
        "name": "val",
        "longname": "Matrix#rref~val",
        "kind": "member",
        "memberof": "Matrix#rref",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12556,
                12561
            ],
            "filename": "matrix.js",
            "lineno": 571,
            "columnno": 13,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001459",
                "name": "j",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "j",
        "longname": "Matrix#rref~j",
        "kind": "member",
        "memberof": "Matrix#rref",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12596,
                12629
            ],
            "filename": "matrix.js",
            "lineno": 572,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001472",
                "name": "resultMatrix.__value[undefined][undefined]",
                "type": "Identifier",
                "funcscope": "Matrix#rref",
                "value": "val",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value[undefined][undefined]",
        "longname": "Matrix#rref~resultMatrix.__value[undefined][undefined]",
        "kind": "member",
        "memberof": "Matrix#rref~resultMatrix",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12650,
                12655
            ],
            "filename": "matrix.js",
            "lineno": 575,
            "columnno": 13,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001483",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "Matrix#rref~i",
        "kind": "member",
        "memberof": "Matrix#rref",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12718,
                12753
            ],
            "filename": "matrix.js",
            "lineno": 577,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001501",
                "name": "val",
                "type": "MemberExpression",
                "funcscope": "Matrix#rref",
                "value": "resultMatrix.__value[undefined][undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "val",
        "longname": "Matrix#rref~val",
        "kind": "member",
        "memberof": "Matrix#rref",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12769,
                12774
            ],
            "filename": "matrix.js",
            "lineno": 578,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001512",
                "name": "j",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "j",
        "longname": "Matrix#rref~j",
        "kind": "member",
        "memberof": "Matrix#rref",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12811,
                12873
            ],
            "filename": "matrix.js",
            "lineno": 579,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001525",
                "name": "resultMatrix.__value[undefined][undefined]",
                "type": "BinaryExpression",
                "funcscope": "Matrix#rref",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "__value[undefined][undefined]",
        "longname": "Matrix#rref~resultMatrix.__value[undefined][undefined]",
        "kind": "member",
        "memberof": "Matrix#rref~resultMatrix",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12928,
                13450
            ],
            "filename": "matrix.js",
            "lineno": 587,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001548",
                "name": "Matrix.prototype.solve",
                "type": "FunctionExpression",
                "paramnames": [
                    "b"
                ]
            },
            "vars": {
                "A": "Matrix#solve~A",
                "LU": "Matrix#solve~LU",
                "L": "Matrix#solve~L",
                "U": "Matrix#solve~U",
                "n": "Matrix#solve~n",
                "s": "Matrix#solve~s",
                "c": "Matrix#solve~c",
                "x": "Matrix#solve~x",
                "k": "Matrix#solve~k",
                "j": "Matrix#solve~j",
                "c[undefined]": "Matrix#solve~c.undefined]",
                "a": "Matrix#solve~a",
                "t": "Matrix#solve~t",
                "b": "Matrix#solve~b",
                "x[undefined]": "Matrix#solve~x.undefined]"
            }
        },
        "undocumented": true,
        "name": "solve",
        "longname": "Matrix#solve",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                12976,
                12992
            ],
            "filename": "matrix.js",
            "lineno": 588,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001558",
                "name": "A",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "A",
        "longname": "Matrix#solve~A",
        "kind": "constant",
        "memberof": "Matrix#solve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13001,
                13012
            ],
            "filename": "matrix.js",
            "lineno": 589,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001565",
                "name": "LU",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "LU",
        "longname": "Matrix#solve~LU",
        "kind": "constant",
        "memberof": "Matrix#solve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13021,
                13030
            ],
            "filename": "matrix.js",
            "lineno": 590,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001572",
                "name": "L",
                "type": "MemberExpression",
                "value": "LU[0]"
            }
        },
        "undocumented": true,
        "name": "L",
        "longname": "Matrix#solve~L",
        "kind": "constant",
        "memberof": "Matrix#solve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13039,
                13048
            ],
            "filename": "matrix.js",
            "lineno": 591,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001578",
                "name": "U",
                "type": "MemberExpression",
                "value": "LU[1]"
            }
        },
        "undocumented": true,
        "name": "U",
        "longname": "Matrix#solve~U",
        "kind": "constant",
        "memberof": "Matrix#solve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13057,
                13075
            ],
            "filename": "matrix.js",
            "lineno": 592,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001584",
                "name": "n",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "n",
        "longname": "Matrix#solve~n",
        "kind": "constant",
        "memberof": "Matrix#solve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13082,
                13087
            ],
            "filename": "matrix.js",
            "lineno": 593,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001591",
                "name": "s",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "s",
        "longname": "Matrix#solve~s",
        "kind": "member",
        "memberof": "Matrix#solve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13096,
                13102
            ],
            "filename": "matrix.js",
            "lineno": 594,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001595",
                "name": "c",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "c",
        "longname": "Matrix#solve~c",
        "kind": "constant",
        "memberof": "Matrix#solve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13111,
                13117
            ],
            "filename": "matrix.js",
            "lineno": 595,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001599",
                "name": "x",
                "type": "ArrayExpression",
                "value": "[]"
            }
        },
        "undocumented": true,
        "name": "x",
        "longname": "Matrix#solve~x",
        "kind": "constant",
        "memberof": "Matrix#solve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13130,
                13135
            ],
            "filename": "matrix.js",
            "lineno": 597,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001604",
                "name": "k",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "k",
        "longname": "Matrix#solve~k",
        "kind": "member",
        "memberof": "Matrix#solve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13164,
                13169
            ],
            "filename": "matrix.js",
            "lineno": 598,
            "columnno": 13,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001615",
                "name": "j",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "j",
        "longname": "Matrix#solve~j",
        "kind": "member",
        "memberof": "Matrix#solve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13191,
                13221
            ],
            "filename": "matrix.js",
            "lineno": 599,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001625",
                "name": "s",
                "type": "BinaryExpression",
                "funcscope": "Matrix#solve",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "s",
        "longname": "Matrix#solve~s",
        "kind": "member",
        "memberof": "Matrix#solve",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13232,
                13247
            ],
            "filename": "matrix.js",
            "lineno": 601,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001641",
                "name": "c[undefined]",
                "type": "BinaryExpression",
                "funcscope": "Matrix#solve",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "Matrix#solve~c.undefined]",
        "kind": "member",
        "memberof": "Matrix#solve~c",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13252,
                13257
            ],
            "filename": "matrix.js",
            "lineno": 602,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001651",
                "name": "s",
                "type": "Literal",
                "funcscope": "Matrix#solve",
                "value": 0,
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "s",
        "longname": "Matrix#solve~s",
        "kind": "member",
        "memberof": "Matrix#solve",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13273,
                13282
            ],
            "filename": "matrix.js",
            "lineno": 604,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001656",
                "name": "a",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "a",
        "longname": "Matrix#solve~a",
        "kind": "member",
        "memberof": "Matrix#solve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13307,
                13312
            ],
            "filename": "matrix.js",
            "lineno": 605,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001669",
                "name": "t",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "t",
        "longname": "Matrix#solve~t",
        "kind": "member",
        "memberof": "Matrix#solve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13326,
                13335
            ],
            "filename": "matrix.js",
            "lineno": 606,
            "columnno": 13,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001674",
                "name": "b",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "b",
        "longname": "Matrix#solve~b",
        "kind": "member",
        "memberof": "Matrix#solve",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13357,
                13387
            ],
            "filename": "matrix.js",
            "lineno": 607,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001686",
                "name": "t",
                "type": "BinaryExpression",
                "funcscope": "Matrix#solve",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "t",
        "longname": "Matrix#solve~t",
        "kind": "member",
        "memberof": "Matrix#solve",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13398,
                13433
            ],
            "filename": "matrix.js",
            "lineno": 609,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001702",
                "name": "x[undefined]",
                "type": "BinaryExpression",
                "funcscope": "Matrix#solve",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "undefined]",
        "longname": "Matrix#solve~x.undefined]",
        "kind": "member",
        "memberof": "Matrix#solve~x",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13452,
                13761
            ],
            "filename": "matrix.js",
            "lineno": 614,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001722",
                "name": "Matrix.prototype.inverse",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "A": "Matrix#inverse~A",
                "I": "Matrix#inverse~I",
                "Inv": "Matrix#inverse~Inv",
                "result": "Matrix#inverse~result",
                "": null
            }
        },
        "undocumented": true,
        "name": "inverse",
        "longname": "Matrix#inverse",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13501,
                13517
            ],
            "filename": "matrix.js",
            "lineno": 615,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001731",
                "name": "A",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "A",
        "longname": "Matrix#inverse~A",
        "kind": "constant",
        "memberof": "Matrix#inverse",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13526,
                13542
            ],
            "filename": "matrix.js",
            "lineno": 616,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001738",
                "name": "I",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "I",
        "longname": "Matrix#inverse~I",
        "kind": "constant",
        "memberof": "Matrix#inverse",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13551,
                13575
            ],
            "filename": "matrix.js",
            "lineno": 617,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001745",
                "name": "Inv",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "Inv",
        "longname": "Matrix#inverse~Inv",
        "kind": "constant",
        "memberof": "Matrix#inverse",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13585,
                13732
            ],
            "filename": "matrix.js",
            "lineno": 619,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001756",
                "name": "result",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Matrix#inverse~result",
        "kind": "constant",
        "memberof": "Matrix#inverse",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13645,
                13664
            ],
            "filename": "matrix.js",
            "lineno": 620,
            "columnno": 10,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001770",
                "name": "half",
                "type": "BinaryExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "half",
        "longname": "<anonymous>~half",
        "kind": "constant",
        "memberof": "<anonymous>",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13763,
                14045
            ],
            "filename": "matrix.js",
            "lineno": 627,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001800",
                "name": "Matrix.prototype.lsq",
                "type": "FunctionExpression",
                "paramnames": [
                    "b"
                ]
            },
            "vars": {
                "A": "Matrix#lsq~A",
                "At": "Matrix#lsq~At",
                "x": "Matrix#lsq~x",
                "X": "Matrix#lsq~X",
                "": null,
                "P": "Matrix#lsq~P",
                "E": "Matrix#lsq~E"
            }
        },
        "undocumented": true,
        "name": "lsq",
        "longname": "Matrix#lsq",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13809,
                13825
            ],
            "filename": "matrix.js",
            "lineno": 628,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001810",
                "name": "A",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "A",
        "longname": "Matrix#lsq~A",
        "kind": "constant",
        "memberof": "Matrix#lsq",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13834,
                13858
            ],
            "filename": "matrix.js",
            "lineno": 629,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001817",
                "name": "At",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "At",
        "longname": "Matrix#lsq~At",
        "kind": "constant",
        "memberof": "Matrix#lsq",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13867,
                13921
            ],
            "filename": "matrix.js",
            "lineno": 630,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001825",
                "name": "x",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "x",
        "longname": "Matrix#lsq~x",
        "kind": "constant",
        "memberof": "Matrix#lsq",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13931,
                13961
            ],
            "filename": "matrix.js",
            "lineno": 632,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001845",
                "name": "X",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "X",
        "longname": "Matrix#lsq~X",
        "kind": "constant",
        "memberof": "Matrix#lsq",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13970,
                13990
            ],
            "filename": "matrix.js",
            "lineno": 633,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001860",
                "name": "P",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "P",
        "longname": "Matrix#lsq~P",
        "kind": "constant",
        "memberof": "Matrix#lsq",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                13999,
                14024
            ],
            "filename": "matrix.js",
            "lineno": 634,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001869",
                "name": "E",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "E",
        "longname": "Matrix#lsq~E",
        "kind": "constant",
        "memberof": "Matrix#lsq",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14047,
                14228
            ],
            "filename": "matrix.js",
            "lineno": 638,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001883",
                "name": "Matrix.prototype.rank",
                "type": "FunctionExpression",
                "paramnames": []
            },
            "vars": {
                "rref": "Matrix#rank~rref",
                "result": "Matrix#rank~result",
                "i": "Matrix#rank~i"
            }
        },
        "undocumented": true,
        "name": "rank",
        "longname": "Matrix#rank",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14093,
                14111
            ],
            "filename": "matrix.js",
            "lineno": 639,
            "columnno": 8,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001892",
                "name": "rref",
                "type": "CallExpression",
                "value": ""
            }
        },
        "undocumented": true,
        "name": "rref",
        "longname": "Matrix#rank~rref",
        "kind": "constant",
        "memberof": "Matrix#rank",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14118,
                14128
            ],
            "filename": "matrix.js",
            "lineno": 640,
            "columnno": 6,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001899",
                "name": "result",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Matrix#rank~result",
        "kind": "member",
        "memberof": "Matrix#rank",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14140,
                14145
            ],
            "filename": "matrix.js",
            "lineno": 641,
            "columnno": 11,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001904",
                "name": "i",
                "type": "Literal",
                "value": 0
            }
        },
        "undocumented": true,
        "name": "i",
        "longname": "Matrix#rank~i",
        "kind": "member",
        "memberof": "Matrix#rank",
        "scope": "inner",
        "params": []
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14178,
                14206
            ],
            "filename": "matrix.js",
            "lineno": 642,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001917",
                "name": "result",
                "type": "MemberExpression",
                "funcscope": "Matrix#rank",
                "value": "rref.__value[undefined][undefined]",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "result",
        "longname": "Matrix#rank~result",
        "kind": "member",
        "memberof": "Matrix#rank",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14230,
                14295
            ],
            "filename": "matrix.js",
            "lineno": 647,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001929",
                "name": "Matrix.prototype.dimension",
                "type": "FunctionExpression",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "dimension",
        "longname": "Matrix#dimension",
        "kind": "function",
        "memberof": "Matrix",
        "scope": "instance"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                14297,
                14318
            ],
            "filename": "matrix.js",
            "lineno": 651,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src",
            "code": {
                "id": "astnode100001942",
                "name": "module.exports",
                "type": "Identifier"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                71,
                173
            ],
            "filename": "addMatrix.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {
                "id": "astnode100001954",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                71,
                133
            ],
            "filename": "addScalar.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {
                "id": "astnode100001993",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function concat\n * @param M {Matrix}\n * @param m {Array}\n * @param idx {number}\n * @returns {Array}\n */",
        "meta": {
            "filename": "concat.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {}
        },
        "kind": "function",
        "name": "concat",
        "params": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                },
                "name": "M"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "name": "m"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "name": "idx"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                }
            }
        ],
        "longname": "concat",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                189,
                270
            ],
            "filename": "concat.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {
                "id": "astnode100002020",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function dot\n * @param B {Matrix}\n * @param a {Array}\n * @returns {Array}\n */",
        "meta": {
            "filename": "dot.js",
            "lineno": 6,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {}
        },
        "kind": "function",
        "name": "dot",
        "params": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                },
                "name": "B"
            },
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                },
                "name": "a"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Array"
                    ]
                }
            }
        ],
        "longname": "dot",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                220,
                402
            ],
            "filename": "dot.js",
            "lineno": 12,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {
                "id": "astnode100002055",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                315,
                358
            ],
            "filename": "dot.js",
            "lineno": 14,
            "columnno": 4,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {
                "id": "astnode100002079",
                "name": "acc",
                "type": "CallExpression",
                "funcscope": "<anonymous>",
                "value": "",
                "paramnames": []
            }
        },
        "undocumented": true,
        "name": "acc",
        "longname": "<anonymous>~acc",
        "kind": "member",
        "memberof": "<anonymous>",
        "scope": "inner"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                38,
                67
            ],
            "filename": "empty.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {
                "id": "astnode100002108",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function identity\n * @desc Creates an identiy matrix from an empty array\n * @param m {array}\n * @param idx {number}\n * @return {Matrix}\n */",
        "meta": {
            "filename": "identity.js",
            "lineno": 3,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {}
        },
        "kind": "function",
        "name": "identity",
        "description": "Creates an identiy matrix from an empty array",
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "name": "m"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "name": "idx"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "identity",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                182,
                249
            ],
            "filename": "identity.js",
            "lineno": 10,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {
                "id": "astnode100002120",
                "name": "module.exports",
                "type": "ArrowFunctionExpression",
                "paramnames": [
                    "m",
                    "idx"
                ]
            },
            "vars": {
                "": null
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "/**\n * @function round\n * @param value {number}\n * @param decimals {number}\n * @returns {number}\n */",
        "meta": {
            "filename": "round.js",
            "lineno": 1,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {}
        },
        "kind": "function",
        "name": "round",
        "params": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "name": "value"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "name": "decimals"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "number"
                    ]
                }
            }
        ],
        "longname": "round",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                101,
                222
            ],
            "filename": "round.js",
            "lineno": 7,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {
                "id": "astnode100002138",
                "name": "module.exports",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value",
                    "decimals"
                ]
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "function",
        "memberof": "module",
        "scope": "static"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                116,
                222
            ],
            "filename": "round.js",
            "lineno": 7,
            "columnno": 15,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {
                "id": "astnode100002139",
                "name": "round",
                "type": "FunctionDeclaration",
                "paramnames": [
                    "value",
                    "decimals"
                ]
            }
        },
        "undocumented": true,
        "name": "round",
        "longname": "round",
        "kind": "function",
        "scope": "global",
        "params": []
    },
    {
        "comment": "/**\n * @function transpose\n * @desc Transposes a array of arrays using the Matrix.map function\n * @param m {array}\n * @param idx {number}\n * @return {Matrix}\n */",
        "meta": {
            "filename": "transpose.js",
            "lineno": 4,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {}
        },
        "kind": "function",
        "name": "transpose",
        "description": "Transposes a array of arrays using the Matrix.map function",
        "params": [
            {
                "type": {
                    "names": [
                        "array"
                    ]
                },
                "name": "m"
            },
            {
                "type": {
                    "names": [
                        "number"
                    ]
                },
                "name": "idx"
            }
        ],
        "returns": [
            {
                "type": {
                    "names": [
                        "Matrix"
                    ]
                }
            }
        ],
        "longname": "transpose",
        "scope": "global"
    },
    {
        "comment": "",
        "meta": {
            "range": [
                233,
                326
            ],
            "filename": "transpose.js",
            "lineno": 11,
            "columnno": 0,
            "path": "/Volumes/BigOne/github/fun-matrix/src/util",
            "code": {
                "id": "astnode100002170",
                "name": "module.exports",
                "type": "CallExpression"
            }
        },
        "undocumented": true,
        "name": "exports",
        "longname": "module.exports",
        "kind": "member",
        "memberof": "module",
        "scope": "static"
    },
    {
        "kind": "package",
        "longname": "package:undefined",
        "files": [
            "/Volumes/BigOne/github/fun-matrix/src/matrix.js",
            "/Volumes/BigOne/github/fun-matrix/src/util/addMatrix.js",
            "/Volumes/BigOne/github/fun-matrix/src/util/addScalar.js",
            "/Volumes/BigOne/github/fun-matrix/src/util/concat.js",
            "/Volumes/BigOne/github/fun-matrix/src/util/dot.js",
            "/Volumes/BigOne/github/fun-matrix/src/util/empty.js",
            "/Volumes/BigOne/github/fun-matrix/src/util/identity.js",
            "/Volumes/BigOne/github/fun-matrix/src/util/round.js",
            "/Volumes/BigOne/github/fun-matrix/src/util/transpose.js"
        ]
    }
]
